name: Build and Push PHP Images

on:
  push:
    branches-ignore: [ main ]
  pull_request: {}
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (php84 or php84-dev)'
        required: false
        default: 'all'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: 'Dockerfile-PHP84'
            app_env: prod
            image_name: 'php84'
          - dockerfile: 'Dockerfile-PHP84'
            app_env: dev
            image_name: 'php84-dev'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Set environment variables
        run: |
          echo "FULL_IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/php" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ matrix.image_name }}" >> $GITHUB_ENV

      - name: Build and push Docker image
        if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.build_type == 'all' || github.event.inputs.build_type == matrix.image_name }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.FULL_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.FULL_IMAGE_NAME }}:${{ github.sha }}-${{ matrix.image_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            BUILD_DATE=${{ github.run_attempt }}
            APP_ENV=${{ matrix.app_env }}
            VCS_REF=${{ github.sha }}
          labels: |
            org.opencontainers.image.created=${{ github.run_id }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT
